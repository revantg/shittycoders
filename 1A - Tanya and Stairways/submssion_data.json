{"submission_stats": [{"date_time": "", "submission_id": "40121472", "problem_name": "A - Tanya and Stairways", "submission_link": "http://codeforces.com/contest/1005/submission/40121472", "participant_id": "18529682", "contest_url": "http://codeforces.com/contest/1005/problem/A", "submission_lang": "GNU C++14", "time_consumed": "31\u00a0ms", "memory_consumed": "0\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["1005", "A"]}], "submissionid": "40121472", "problem_name": "A - Tanya and Stairways", "language": "GNU C++14", "verdict": "Accepted", "time_taken": ["31 ms"], "memory": "12 KB", "submitted_time": "2018-07-09 18:47:27", "judged_time": "2018-07-10 08:47:22", "program": ["#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n, temp, count = 1; cin >> n;\r\n    vector <int> v(n);\r\n    vector <int> ans;\r\n    for(int i = 0; i < n; i++)   cin >> v[i];\r\n    for(int i = 1; i < n; i++) \r\n        if (v[i] == 1)\r\n        {\r\n            count++;\r\n            ans.push_back(v[i-1]);\r\n        }\r\n    cout << count << endl;\r\n    ans.push_back(v[n-1]);\r\n    for(int i = 0; i < ans.size(); i++) cout << ans[i] << \" \";\r\n}\r\n"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "7\r\n1 2 3 1 2 3 4\r\n", "output_data": "2\r\n3 4 ", "correct_answer": "2\r\n3 4 ", "comment": "ok 3 number(s): \"2 3 4\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4\r\n1 1 1 1\r\n", "output_data": "4\r\n1 1 1 1 ", "correct_answer": "4\r\n1 1 1 1 ", "comment": "ok 5 number(s): \"4 1 1 1 1\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n1 2 3 4 5\r\n", "output_data": "1\r\n5 ", "correct_answer": "1\r\n5 ", "comment": "ok 2 number(s): \"1 5\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n1 2 1 2 1\r\n", "output_data": "3\r\n2 2 1 ", "correct_answer": "3\r\n2 2 1 ", "comment": "ok 4 number(s): \"3 2 2 1\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1\r\n1\r\n", "output_data": "1\r\n1 ", "correct_answer": "1\r\n1 ", "comment": "ok 2 number(s): \"1 1\"\r\n", "Time": ": 15 ms, ", "memory": ": 8 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "48\r\n1 2 3 4 1 2 3 1 1 2 3 1 2 3 4 1 1 2 3 4 1 2 3 4 1 2 3 4 1 1 2 1 2 1 2 1 1 2 1 2 1 2 3 1 2 1 2 1\r\n", "output_data": "20\r\n4 3 1 3 4 1 4 4 4 1 2 2 2 1 2 2 3 2 2 1 ", "correct_answer": "20\r\n4 3 1 3 4 1 4 4 4 1 2 2 2 1 2 2 3 2 2 1 ", "comment": "ok 21 numbers\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1000\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 1...", "output_data": "1\r\n1000 ", "correct_answer": "1\r\n1000 ", "comment": "ok 2 number(s): \"1 1000\"\r\n", "Time": ": 31 ms, ", "memory": ": 8 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "947\r\n1 2 3 4 5 1 2 3 4 1 1 2 3 4 5 1 2 3 4 1 2 3 4 5 1 2 3 4 1 1 2 3 1 2 3 4 5 1 2 3 4 1 1 1 2 1 2 1 2 1 2 3 4 1 2 3 4 1 1 2 3 4 5 1 2 1 2 1 2 3 4 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 1 2 3 1 2 3 4 5 1 2 3 4 5 1 2 3 4 5 1 2 3 4 1 2 3 4 1 2 3 4 5 1 1 2 1 1 2 1 2 1 2 3 1 2 3 1 2 1 2 1 2 3 4 1 2 3 4 1 2 3 1 2 3 4 5 1 2 3 4 1 2 1 2 1 2 3 4 5 1 2 3 4 5 1 2 3 1 2 3 4 5 1 2 3 4 1 2 3 1 2 3 1 1 2 3 4 1 1 1 2 3 1 1 2 3 4 5 1 2 3 4 1 1 2 3 4 5 1 2 3 4 5 1 2 3 1 1 2 1 2 3 4 5 1 2 3 4 5 1 1 1 2 1 2 3 4 1 2 3 1 1 2 3 4 5 ...", "output_data": "320\r\n5 4 1 5 4 5 4 1 3 5 4 1 1 2 2 2 4 4 1 5 2 2 4 5 5 5 2 3 5 5 5 4 4 5 1 2 1 2 2 3 3 2 2 4 4 3 5 4 2 2 5 5 3 5 4 3 3 1 4 1 1 3 1 5 4 1 5 5 3 1 2 5 5 1 1 2 4 3 1 5 5 4 4 2 1 5 4 3 1 4 4 5 3 3 5 2 3 1 5 1 3 1 2 3 1 1 1 4 4 2 2 4 5 3 3 1 3 2 5 5 4 2 1 5 3 3 2 1 5 2 2 5 5 2 4 5 3 3 2 2 1 3 1 4 1 3 2 1 5 1 1 1 1 3 1 4 4 5 4 4 2 1 1 5 1 1 4 5 5 1 3 1 5 4 3 4 5 3 4 4 3 1 4 5 3 3 4 3 3 3 4 1 5 1 4 4 5 4 4 1 5 3 2 1 3 5 2 4 2 2 1 2 2 4 2 1 5 1 3 3 5 5 2 1 2 2 1 3 4 4 5 1 3 5 2 3 3 2 1 5 3 4 2 1 5 1 1 4 4 4 1 3 3 ...", "correct_answer": "320\r\n5 4 1 5 4 5 4 1 3 5 4 1 1 2 2 2 4 4 1 5 2 2 4 5 5 5 2 3 5 5 5 4 4 5 1 2 1 2 2 3 3 2 2 4 4 3 5 4 2 2 5 5 3 5 4 3 3 1 4 1 1 3 1 5 4 1 5 5 3 1 2 5 5 1 1 2 4 3 1 5 5 4 4 2 1 5 4 3 1 4 4 5 3 3 5 2 3 1 5 1 3 1 2 3 1 1 1 4 4 2 2 4 5 3 3 1 3 2 5 5 4 2 1 5 3 3 2 1 5 2 2 5 5 2 4 5 3 3 2 2 1 3 1 4 1 3 2 1 5 1 1 1 1 3 1 4 4 5 4 4 2 1 1 5 1 1 4 5 5 1 3 1 5 4 3 4 5 3 4 4 3 1 4 5 3 3 4 3 3 3 4 1 5 1 4 4 5 4 4 1 5 3 2 1 3 5 2 4 2 2 1 2 2 4 2 1 5 1 3 3 5 5 2 1 2 2 1 3 4 4 5 1 3 5 2 3 3 2 1 5 3 4 2 1 5 1 1 4 4 4 1 3 3 ...", "comment": "ok 321 numbers\r\n", "Time": ": 31 ms, ", "memory": ": 12 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2\r\n1 2\r\n", "output_data": "1\r\n2 ", "correct_answer": "1\r\n2 ", "comment": "ok 2 number(s): \"1 2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1000\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...", "output_data": "1000\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...", "correct_answer": "1000\r\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1...", "comment": "ok 1001 numbers\r\n", "Time": ": 30 ms, ", "memory": ": 12 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3\r\n1 1 2\r\n", "output_data": "2\r\n1 2 ", "correct_answer": "2\r\n1 2 ", "comment": "ok 3 number(s): \"2 1 2\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4\r\n1 1 2 3\r\n", "output_data": "2\r\n1 3 ", "correct_answer": "2\r\n1 3 ", "comment": "ok 3 number(s): \"2 1 3\"\r\n", "Time": ": 0 ms, ", "memory": ": 4 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "535\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 15...", "output_data": "2\r\n534 1 ", "correct_answer": "2\r\n534 1 ", "comment": "ok 3 number(s): \"2 534 1\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "159\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 15...", "output_data": "1\r\n159 ", "correct_answer": "1\r\n159 ", "comment": "ok 2 number(s): \"1 159\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "8\r\n1 2 3 1 2 3 4 5\r\n", "output_data": "2\r\n3 5 ", "correct_answer": "2\r\n3 5 ", "comment": "ok 3 number(s): \"2 3 5\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n1 1 1 2 3\r\n", "output_data": "3\r\n1 1 3 ", "correct_answer": "3\r\n1 1 3 ", "comment": "ok 4 number(s): \"3 1 1 3\"\r\n", "Time": ": 15 ms, ", "memory": ": 4 KB"}], "username": "ltra_golu"}