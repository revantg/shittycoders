{"submission_stats": [{"date_time": "", "submission_id": "37132146", "problem_name": "B - Little Elephant and Magic Square", "submission_link": "http://codeforces.com/contest/259/submission/37132146", "participant_id": "17080162", "contest_url": "http://codeforces.com/contest/259/problem/B", "submission_lang": "GNU C++11", "time_consumed": "62\u00a0ms", "memory_consumed": "3400\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["259", "B"]}], "submissionid": "37132146", "problem_name": "B - Little Elephant and Magic Square", "language": "GNU C++11", "verdict": "Accepted", "time_taken": ["62 ms"], "memory": "3440 KB", "submitted_time": "2018-04-10 00:46:11", "judged_time": "2018-04-10 00:46:11", "program": ["#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long int a[3][3], sum[3];\r\n    long int d;\r\n    for (int i = 0; i < 3; i++)\r\n    {\r\n        sum[i] = 0;\r\n        for (int j = 0; j < 3; j++)\r\n        {\r\n            cin >> a[i][j];\r\n            sum[i] += a[i][j];\r\n        }\r\n    }\r\n\r\n    d = sum[1] - sum[0];\r\n    int ans = -1;\r\n    for (int i = 0; i <= 100000 and ans == -1; i++)\r\n        if ((3 * i) - (3 * d) == a[0][2] + i - d + a[2][0])\r\n            ans = i;\r\n    for (int i = 0; i < 3; i++)\r\n    {\r\n        for (int j = 0; j < 3; j++)\r\n            if (i == j)\r\n                cout << ans - (i * d) << \" \";\r\n            else\r\n                cout << a[i][j] << \" \";\r\n        cout << endl;\r\n    }\r\n}\r\n"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 1 1\r\n1 0 1\r\n1 1 0\r\n", "output_data": "1 1 1 \r\n1 1 1 \r\n1 1 1 \r\n", "correct_answer": "1 1 1\r\n1 1 1\r\n1 1 1\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 3 6\r\n5 0 5\r\n4 7 0\r\n", "output_data": "6 3 6 \r\n5 5 5 \r\n4 7 4 \r\n", "correct_answer": "6 3 6\r\n5 5 5\r\n4 7 4\r\n", "comment": "ok ok.\r\n", "Time": ": 62 ms, ", "memory": ": 3424 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 4 4\r\n4 0 4\r\n4 4 0\r\n", "output_data": "4 4 4 \r\n4 4 4 \r\n4 4 4 \r\n", "correct_answer": "4 4 4\r\n4 4 4\r\n4 4 4\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 54 48\r\n36 0 78\r\n66 60 0\r\n", "output_data": "69 54 48 \r\n36 57 78 \r\n66 60 45 \r\n", "correct_answer": "69 54 48\r\n36 57 78\r\n66 60 45\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3440 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 17 14\r\n15 0 15\r\n16 13 0\r\n", "output_data": "14 17 14 \r\n15 15 15 \r\n16 13 16 \r\n", "correct_answer": "14 17 14\r\n15 15 15\r\n16 13 16\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3428 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 97 56\r\n69 0 71\r\n84 43 0\r\n", "output_data": "57 97 56 \r\n69 70 71 \r\n84 43 83 \r\n", "correct_answer": "57 97 56\r\n69 70 71\r\n84 43 83\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 1099 1002\r\n1027 0 1049\r\n1074 977 0\r\n", "output_data": "1013 1099 1002 \r\n1027 1038 1049 \r\n1074 977 1063 \r\n", "correct_answer": "1013 1099 1002\r\n1027 1038 1049\r\n1074 977 1063\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3432 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 98721 99776\r\n99575 0 99123\r\n98922 99977 0\r\n", "output_data": "99550 98721 99776 \r\n99575 99349 99123 \r\n98922 99977 99148 \r\n", "correct_answer": "99550 98721 99776\r\n99575 99349 99123\r\n98922 99977 99148\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3440 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 6361 2304\r\n1433 0 8103\r\n7232 3175 0\r\n", "output_data": "5639 6361 2304 \r\n1433 4768 8103 \r\n7232 3175 3897 \r\n", "correct_answer": "5639 6361 2304\r\n1433 4768 8103\r\n7232 3175 3897\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 99626 99582\r\n99766 0 99258\r\n99442 99398 0\r\n", "output_data": "99328 99626 99582 \r\n99766 99512 99258 \r\n99442 99398 99696 \r\n", "correct_answer": "99328 99626 99582\r\n99766 99512 99258\r\n99442 99398 99696\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3396 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 99978 99920\r\n99950 0 99918\r\n99948 99890 0\r\n", "output_data": "99904 99978 99920 \r\n99950 99934 99918 \r\n99948 99890 99964 \r\n", "correct_answer": "99904 99978 99920\r\n99950 99934 99918\r\n99948 99890 99964\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 840 666\r\n612 0 948\r\n894 720 0\r\n", "output_data": "834 840 666 \r\n612 780 948 \r\n894 720 726 \r\n", "correct_answer": "834 840 666\r\n612 780 948\r\n894 720 726\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3440 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 28 10\r\n12 0 24\r\n26 8 0\r\n", "output_data": "16 28 10 \r\n12 18 24 \r\n26 8 20 \r\n", "correct_answer": "16 28 10\r\n12 18 24\r\n26 8 20\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3420 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 120 83\r\n98 0 90\r\n105 68 0\r\n", "output_data": "79 120 83 \r\n98 94 90 \r\n105 68 109 \r\n", "correct_answer": "79 120 83\r\n98 94 90\r\n105 68 109\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3408 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 86900 85807\r\n85836 0 86842\r\n86871 85778 0\r\n", "output_data": "86310 86900 85807 \r\n85836 86339 86842 \r\n86871 85778 86368 \r\n", "correct_answer": "86310 86900 85807\r\n85836 86339 86842\r\n86871 85778 86368\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3428 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 74 78\r\n78 0 74\r\n74 78 0\r\n", "output_data": "76 74 78 \r\n78 76 74 \r\n74 78 76 \r\n", "correct_answer": "76 74 78\r\n78 76 74\r\n74 78 76\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "17\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 505 681\r\n605 0 657\r\n581 757 0\r\n", "output_data": "707 505 681 \r\n605 631 657 \r\n581 757 555 \r\n", "correct_answer": "707 505 681\r\n605 631 657\r\n581 757 555\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "18\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 662 918\r\n822 0 854\r\n758 1014 0\r\n", "output_data": "934 662 918 \r\n822 838 854 \r\n758 1014 742 \r\n", "correct_answer": "934 662 918\r\n822 838 854\r\n758 1014 742\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3440 KB"}, {"test_no": "19\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 93 95\r\n93 0 97\r\n95 97 0\r\n", "output_data": "97 93 95 \r\n93 95 97 \r\n95 97 93 \r\n", "correct_answer": "97 93 95\r\n93 95 97\r\n95 97 93\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3432 KB"}, {"test_no": "20\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 709 712\r\n719 0 695\r\n702 705 0\r\n", "output_data": "700 709 712 \r\n719 707 695 \r\n702 705 714 \r\n", "correct_answer": "700 709 712\r\n719 707 695\r\n702 705 714\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}, {"test_no": "21\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 7 6\r\n9 0 1\r\n4 3 0\r\n", "output_data": "2 7 6 \r\n9 5 1 \r\n4 3 8 \r\n", "correct_answer": "2 7 6\r\n9 5 1\r\n4 3 8\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3392 KB"}, {"test_no": "22\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 9 2\r\n3 0 7\r\n8 1 0\r\n", "output_data": "4 9 2 \r\n3 5 7 \r\n8 1 6 \r\n", "correct_answer": "4 9 2\r\n3 5 7\r\n8 1 6\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3432 KB"}, {"test_no": "23\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 1 43\r\n13 0 61\r\n31 73 0\r\n", "output_data": "67 1 43 \r\n13 37 61 \r\n31 73 7 \r\n", "correct_answer": "67 1 43\r\n13 37 61\r\n31 73 7\r\n", "comment": "ok ok.\r\n", "Time": ": 0 ms, ", "memory": ": 3424 KB"}, {"test_no": "24\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "0 100000 100000\r\n100000 0 100000\r\n100000 100000 0\r\n", "output_data": "100000 100000 100000 \r\n100000 100000 100000 \r\n100000 100000 100000 \r\n", "correct_answer": "100000 100000 100000\r\n100000 100000 100000\r\n100000 100000 100000\r\n", "comment": "ok ok.\r\n", "Time": ": 30 ms, ", "memory": ": 3436 KB"}], "username": "ltra_golu"}