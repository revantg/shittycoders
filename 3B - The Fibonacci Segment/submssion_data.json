{"submission_stats": [{"date_time": "", "submission_id": "37324977", "problem_name": "B - The Fibonacci Segment", "submission_link": "http://codeforces.com/contest/365/submission/37324977", "participant_id": "17147482", "contest_url": "http://codeforces.com/contest/365/problem/B", "submission_lang": "GNU C++11", "time_consumed": "202\u00a0ms", "memory_consumed": "3800\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["365", "B"]}], "submissionid": "37324977", "problem_name": "B - The Fibonacci Segment", "language": "GNU C++11", "verdict": "Accepted", "time_taken": ["202 ms"], "memory": "3828 KB", "submitted_time": "2018-04-14 14:36:43", "judged_time": "2018-04-14 14:36:43", "program": ["#include<bits/stdc++.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n, count = 2, max = 2; cin>>n;\r\n    if (n == 1 or n == 2) {\r\n        cout<<n;\r\n        return(0);\r\n    }\r\n    vector <int> v(n);\r\n    for(int i = 0; i < n; i++){\r\n        cin>>v[i];\r\n        if (i > 1 and v[i] == v[i-1] + v[i-2])\r\n            count++;\r\n        else    \r\n            count = 2;\r\n        if (count > max) {\r\n            max = count;\r\n        }\r\n    }\r\n    cout<<max;\r\n}"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10\r\n1 2 3 5 8 13 21 34 55 89\r\n", "output_data": "10", "correct_answer": "10\r\n", "comment": "ok 1 number(s): \"10\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n1 1 1 1 1\r\n", "output_data": "2", "correct_answer": "2\r\n", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1\r\n1000\r\n", "output_data": "1", "correct_answer": "1\r\n", "comment": "ok 1 number(s): \"1\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "51\r\n1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\r\n", "output_data": "50", "correct_answer": "50\r\n", "comment": "ok 1 number(s): \"50\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "100000", "correct_answer": "100000\r\n", "comment": "ok 1 number(s): \"100000\"\r\n", "Time": ": 109 ms, ", "memory": ": 3824 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n1 2 4 5 1 1 2 1 0 3 2 4 5 5 0 3 0 2 0 2 4 5 4 3 0 5 3 2 0 5 2 2 4 0 5 2 4 5 5 3 0 5 4 5 2 4 0 2 4 4 0 5 1 5 1 3 0 5 3 0 0 0 4 0 1 5 0 4 5 4 4 0 5 4 2 2 4 0 3 3 1 2 3 2 2 4 3 5 1 4 4 3 1 0 1 4 1 5 5 4 4 1 2 3 3 5 2 2 4 0 0 1 2 5 2 5 3 1 3 1 0 1 2 4 1 2 5 5 4 2 3 1 3 0 3 5 0 0 0 4 5 4 4 1 3 1 2 3 4 1 2 2 2 2 2 3 1 1 1 5 0 2 3 1 4 2 0 3 3 3 0 4 5 5 2 2 3 2 5 1 3 5 4 5 4 2 5 0 0 4 5 2 0 4 2 5 3 4 0 5 4 5 1 3 5 0 5 1 1 4 5 5 0 3 0 3 3 4 3 1 0 5 3 5 4 2 0 4 0 4 4 2 3 3 3 0 0 2 5 0 5 5 2 4 3 2 1 1 1 2 1 3...", "output_data": "46", "correct_answer": "46\r\n", "comment": "ok 1 number(s): \"46\"\r\n", "Time": ": 124 ms, ", "memory": ": 3816 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "100000", "correct_answer": "100000\r\n", "comment": "ok 1 number(s): \"100000\"\r\n", "Time": ": 109 ms, ", "memory": ": 3816 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n672 679 100 283 351 552 985 858 661 550 709 447 961 235 735 8 304 390 684 340 654 94 763 778 655 809 451 741 372 381 291 880 65 521 688 493 225 939 414 514 182 68 90 872 91 519 495 558 754 271 772 136 555 744 670 130 92 348 184 112 195 551 933 470 238 31 289 691 657 84 562 305 941 155 623 399 667 972 52 779 372 71 479 441 507 797 167 979 752 354 647 658 715 382 366 376 727 656 754 168 661 240 349 110 538 909 11 944 26 746 897 894 339 519 619 545 173 278 372 650 1022 1672 2694 4366 7060 11426 18486 ...", "output_data": "32", "correct_answer": "32\r\n", "comment": "ok 1 number(s): \"32\"\r\n", "Time": ": 156 ms, ", "memory": ": 3812 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n6990 6304 738 8705 6792 2219 1120 2707 9143 11850 20993 32843 53836 86679 140515 227194 367709 594903 962612 1557515 2520127 4077642 6597769 10675411 17273180 27948591 45221771 73170362 118392133 191562495 309954628 501517123 811471751 8298 454 6727 159 7296 6792 6543 6425 8263 5400 603 5191 5637 6530 8676 8056 9864 1628 8446 7627 9144 2019 3915 8027 5887 7325 195 6184 7122 8653 8555 6907 5144 3152 9454 4291 4669 1176 1285 1089 1725 6252 962 8306 9071 9776 3277 9326 8295 3058 5090 5905 5876 6383 33...", "output_data": "27", "correct_answer": "27\r\n", "comment": "ok 1 number(s): \"27\"\r\n", "Time": ": 171 ms, ", "memory": ": 3824 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "100000", "correct_answer": "100000\r\n", "comment": "ok 1 number(s): \"100000\"\r\n", "Time": ": 109 ms, ", "memory": ": 3824 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "100000", "correct_answer": "100000\r\n", "comment": "ok 1 number(s): \"100000\"\r\n", "Time": ": 171 ms, ", "memory": ": 3828 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "100000", "correct_answer": "100000\r\n", "comment": "ok 1 number(s): \"100000\"\r\n", "Time": ": 124 ms, ", "memory": ": 3824 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n1 4 5 9 14 23 37 60 97 157 254 411 665 1076 1741 2817 4558 7375 11933 19308 31241 50549 81790 132339 214129 346468 560597 907065 1467662 2374727 3842389 6217116 10059505 16276621 26336126 42612747 68948873 111561620 180510493 292072113 472582606 764654719 3 3 6 9 15 24 39 63 102 165 267 432 699 1131 1830 2961 4791 7752 12543 20295 32838 53133 85971 139104 225075 364179 589254 953433 1542687 2496120 4038807 6534927 10573734 17108661 27682395 44791056 72473451 117264507 189737958 307002465 496740423 ...", "output_data": "69734", "correct_answer": "69734\r\n", "comment": "ok 1 number(s): \"69734\"\r\n", "Time": ": 124 ms, ", "memory": ": 3824 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n1 5 2 7 9 16 25 41 66 107 173 280 453 733 1186 1919 3105 5024 8129 13153 21282 34435 55717 90152 145869 236021 381890 617911 999801 1617712 2617513 4235225 6852738 11087963 17940701 29028664 46969365 75998029 122967394 198965423 321932817 520898240 842831057 189737958 307002465 496740423 803742888 26850355 43444787 70295142 113739929 184035071 297775000 481810071 779585071 13584083 793169154 806753237 57543099 93106690 150649789 243756479 394406268 638162747 316229930 511670775 827900705 686478381 ...", "output_data": "69576", "correct_answer": "69576\r\n", "comment": "ok 1 number(s): \"69576\"\r\n", "Time": ": 124 ms, ", "memory": ": 3824 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n0 12 12 24 36 60 96 156 252 408 660 1068 1728 2796 4524 7320 11844 19164 31008 50172 81180 131352 212532 343884 556416 900300 1456716 2357016 3813732 6170748 9984480 16155228 26139708 42294936 68434644 110729580 179164224 289893804 469058028 758951832 203322041 328981973 532304014 861285987 3 11 9 20 29 49 78 127 205 332 537 869 1406 2275 3681 5956 9637 15593 25230 40823 66053 106876 172929 279805 452734 732539 1185273 1917812 3103085 5020897 8123982 13144879 21268861 34413740 55682601 90096341 145...", "output_data": "70088", "correct_answer": "70088\r\n", "comment": "ok 1 number(s): \"70088\"\r\n", "Time": ": 124 ms, ", "memory": ": 3812 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n2 2 4 6 10 16 26 42 68 110 178 288 466 754 1220 1974 3194 5168 8362 13530 21892 35422 57314 92736 150050 242786 392836 635622 1028458 1664080 2692538 4356618 7049156 11405774 18454930 29860704 48315634 78176338 126491972 204668310 331160282 535828592 866988874 39088169 906077043 945165212 165580141 267914296 433494437 701408733 866988874 102334155 165580141 267914296 433494437 701408733 0 701408733 701408733 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "70035", "correct_answer": "70035\r\n", "comment": "ok 1 number(s): \"70035\"\r\n", "Time": ": 124 ms, ", "memory": ": 3828 KB"}, {"test_no": "17\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n1 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0...", "output_data": "70044", "correct_answer": "70044\r\n", "comment": "ok 1 number(s): \"70044\"\r\n", "Time": ": 124 ms, ", "memory": ": 3816 KB"}, {"test_no": "18\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n202 729 344 560 928 286 671 276 370 380 127 549 322 434 74 90 186 654 3 418 746 287 285 935 960 747 425 518 845 341 713 816 642 244 422 17 635 492 202 654 643 342 484 382 876 955 588 658 606 574 142 950 703 786 836 14 602 599 425 394 722 275 932 812 387 262 728 260 996 751 856 677 80 404 382 951 861 608 188 438 905 16 386 934 517 238 370 906 160 583 45 890 631 435 160 178 75 356 530 143 924 263 84 632 616 934 275 746 884 236 658 180 633 658 181 62 698 222 822 858 536 104 658 346 104 147 839 355 716...", "output_data": "31", "correct_answer": "31\r\n", "comment": "ok 1 number(s): \"31\"\r\n", "Time": ": 156 ms, ", "memory": ": 3812 KB"}, {"test_no": "19\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000\r\n78525822 60065566 78721973 53052990 96381911 153968 91445675 54341077 4950581 13738624 58660027 20766448 30603601 46091981 92133011 71137077 12473924 98079665 88539190 58074815 63533014 31005173 59924385 83763365 390455 32120832 28708608 31617581 18366578 9921540 88405390 9827898 72804753 52921548 73641865 52584089 82641929 36856281 21056519 27991835 21936182 72955615 3431633 2685042 60835463 58242803 69915104 43603156 98880845 56089212 83781294 47916615 67348208 15703390 14771313 79551194 46457302...", "output_data": "7", "correct_answer": "7\r\n", "comment": "ok 1 number(s): \"7\"\r\n", "Time": ": 202 ms, ", "memory": ": 3820 KB"}, {"test_no": "20\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1\r\n0\r\n", "output_data": "1", "correct_answer": "1\r\n", "comment": "ok 1 number(s): \"1\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "21\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2\r\n0 0\r\n", "output_data": "2", "correct_answer": "2\r\n", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "22\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3\r\n0 0 0\r\n", "output_data": "3", "correct_answer": "3\r\n", "comment": "ok 1 number(s): \"3\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "23\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4\r\n0 0 0 0\r\n", "output_data": "4", "correct_answer": "4\r\n", "comment": "ok 1 number(s): \"4\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "24\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n0 0 0 0 0\r\n", "output_data": "5", "correct_answer": "5\r\n", "comment": "ok 1 number(s): \"5\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "25\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "6\r\n10 20 30 10 40 50\r\n", "output_data": "4", "correct_answer": "4\r\n", "comment": "ok 1 number(s): \"4\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "26\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5\r\n8 9 17 26 43\r\n", "output_data": "5", "correct_answer": "5\r\n", "comment": "ok 1 number(s): \"5\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "27\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "12\r\n1 2 3 5 8 13 0 1 1 2 3 5\r\n", "output_data": "6", "correct_answer": "6\r\n", "comment": "ok 1 number(s): \"6\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "28\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "13\r\n1 2 3 5 8 13 7 0 1 1 2 3 5\r\n", "output_data": "6", "correct_answer": "6\r\n", "comment": "ok 1 number(s): \"6\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "29\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2\r\n1 3\r\n", "output_data": "2", "correct_answer": "2\r\n", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "30\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2\r\n7 1\r\n", "output_data": "2", "correct_answer": "2\r\n", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}], "username": "ltra_golu"}