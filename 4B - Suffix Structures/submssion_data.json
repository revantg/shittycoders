{"submission_stats": [{"date_time": "", "submission_id": "37131622", "problem_name": "B - Suffix Structures", "submission_link": "http://codeforces.com/contest/448/submission/37131622", "participant_id": "17065912", "contest_url": "http://codeforces.com/contest/448/problem/B", "submission_lang": "GNU C++11", "time_consumed": "15\u00a0ms", "memory_consumed": "3400\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["448", "B"]}], "submissionid": "37131622", "problem_name": "B - Suffix Structures", "language": "GNU C++11", "verdict": "Accepted", "time_taken": ["15 ms"], "memory": "3440 KB", "submitted_time": "2018-04-09 23:59:07", "judged_time": "2018-04-09 23:59:07", "program": ["//Copy kiya hai ye question\r\n#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main(){\r\n    int i, m=0;\r\n    string s, t, rS, rT;\r\n    cin >> s;\r\n    cin >> t;\r\n    rS = s; rT = t;\r\n    bool isAuto=true, isArr=true;\r\n    if(s.length() < t.length()){\r\n        isAuto=false;\r\n        isArr=false;\r\n    }else if(s.length() == t.length()) {\r\n        isAuto=false;\r\n        for(i=0; i<s.length(); i++){\r\n            for(int j=0; j<rT.length(); j++){\r\n                if(s[i]==rT[j]){\r\n                    m++;\r\n                    rT[j] = 0;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(m==s.length()){\r\n            isArr=true;\r\n        }else{\r\n            isArr=false;\r\n        }\r\n    }else{\r\n        m=0;\r\n        for(int i=0; i<rT.length(); i++){\r\n            for(int j=0; j<rS.length(); j++){\r\n                if(rT[i]==rS[j]){\r\n                    rS[j]=0;\r\n                    m++;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(m==t.length()){\r\n            isAuto=true;\r\n            int prevI=-1, count=0;\r\n            rS=s; rT=t;\r\n            for(int i=0; i<rT.length(); i++){\r\n                for(int j=0; j<rS.length(); j++){\r\n                    if(rT[i]==rS[j] && j>prevI){\r\n                        prevI = j;\r\n                        rS[j]=0;\r\n                        count++;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(count==t.length()){\r\n                isArr=false;\r\n            }else{\r\n                isArr=true;\r\n            }\r\n        }else{\r\n            isArr=false;\r\n            isAuto=false;\r\n        }\r\n    }\r\n    \r\n    if(isAuto && isArr){\r\n        cout << \"both\" << endl;\r\n    }else if(isAuto && !isArr){\r\n        cout << \"automaton\" << endl;\r\n    }else if(!isAuto && isArr){\r\n        cout << \"array\" << endl;\r\n    }else if(!isAuto && !isArr){\r\n        cout << \"need tree\" << endl;\r\n    }\r\n}"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "automaton\r\ntomat\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 0 ms, ", "memory": ": 3440 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "array\r\narary\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 15 ms, ", "memory": ": 3440 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "both\r\nhot\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 0 ms, ", "memory": ": 3440 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "need\r\ntree\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "abacaba\r\naaaa\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "z\r\nzz\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3408 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "itwtyhhsdjjffmmoqkkhxjouypznewstyorotxhozlytndehmaxogrohccnqcgkrjrdmnuaogiwmnmsbdaizqkxnkqxxiihbwepc\r\nsnixfywvcntitcefsgqxjcodwtumurcglfmnamnowzbjzmfzspbfuldraiepeeiyasmrsneekydsbvazoqszyjxkjiotushsddet\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "y\r\nu\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3424 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "nbjigpsbammkuuqrxfnmhtimwpflrflehffykbylmnxgadldchdbqklqbremcmzlpxieozgpfgrhegmdcxxfyehzzelcwgkierrj\r\nbjbakuqrnhimwhffykylmngadhbqkqbrcziefredxxezcgkerj\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "gzvvawianfysfuxhruarhverinqsbrfxvkcsermuzowahevgskmpvfdljtcztnbkzftfhvnarvkfkqjgrzbrcfthqmspvpqcva\r\nwnm\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3404 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "dvzohfzgzdjavqwhjcrdphpdqjwtqijabbrhformstqaonlhbglmxugkwviigqaohwvqfhdwwcvdkjrcgxblhvtashhcxssbvpo\r\nzgvqhpjhforlugkwfwrchvhp\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3400 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "wkfoyetcjivofxaktmauapzeuhcpzjloszzxwydgavebgniiuzrscytsokjkjfkpylvxtlqlquzduywbhqdzmtwprfdohmwgmysy\r\ny\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 0 ms, ", "memory": ": 3428 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "npeidcoiulxdxzjozsonkdwnoazsbntfclnpubgweaynuhfmrtybqtkuihxxfhwlnquslnhzvqznyofzcbdewnrisqzdhsiyhkxf\r\nnpeidcoiulxdxzjozsonkdwnoazsbntfclnpubgeaynuhfmrtybqtkuihxxfhwlnquslnhzvqznyofzcbdewnrisqzdhsiyhkxf\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 0 ms, ", "memory": ": 3440 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "gahcqpgmypeahjcwkzahnhmsmxosnikucqwyzklbfwtujjlzvwklqzxakcrcqalhsvsgvknpxsoqkjnyjkypfsiogbcaxjyugeet\r\ngahcqpgmypeahjwwkzahnhmsmxopnikucacyzklbfwtujjlzvwkoqzxakcrcqqlhsvsgvknpxslgkjnyjkysfoisqbcaxjyuteeg\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 0 ms, ", "memory": ": 3432 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "vwesbxsifsjqapwridrenumrukgemlldpbtdhxivsrmzbgprtkqgaryniudkjgpjndluwxuohwwysmyuxyrulwsodgunzirudgtx\r\nugeabdszfshqsksddireguvsukieqlluhngdpxjvwwnzdrtrtrdjiuxgadtgjpxrmlynspyyryngxuiibrmurwpmoxwwuklbwumo\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 15 ms, ", "memory": ": 3420 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "kjnohlseyntrslfssrshjxclzlsbkfzfwwwgyxsysvmfkxugdwjodfyxhdsveruoioutwmtcbaljomaorvzjsbmglqckmsyieeiu\r\netihhycsjgdysowuljmaoksoecxawsgsljofkrjftuweidrkwtymyswdlilsozsxevfbformnbsumlxzqzykjvsnrlxufvgbmshc\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "17\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "ezbpsylkfztypqrefinexshtgglmkoinrktkloitqhfkivoabrfrivvqrcxkjckzvcozpchhiodrbbxuhnwcjigftnrjfiqyxakh\r\niacxghqffzdbsiqunhxbiooqvfohzticjpvrzykcrlrxklgknyrkrhjxcetmfocierekatfvkbslkkrbhftwngoijpipvqyznthi\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 15 ms, ", "memory": ": 3420 KB"}, {"test_no": "18\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "smywwqeolrsytkthfgacnbufzaulgszikbhluzcdbafjclkqueepxbhoamrwswxherzhhuqqcttokbljfbppdinzqgdupkfevmke\r\nsmywwqeolrsytkthfgacnbufzaulgszikbhluzcdbafjclkqueepxbhoamrwswxherzhhufqcttokbljfbppdinzqgdupkqevmke\r\n", "output_data": "array\r\n", "correct_answer": "array\r\n", "comment": "ok single line: 'array'\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "19\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "hxsvvydmzhxrswvhkvrbjrfqkazbkjabnrdghposgyfeslzumaovfkallszzumztftgpcilwfrzpvhhbgdzdvnmseqywlzmhhoxh\r\ndbelhtzgkssyfrqgzuurdjhwvmdbhylhmvphjgxpzhxbb\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 15 ms, ", "memory": ": 3436 KB"}, {"test_no": "20\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "nppjzscfgcvdcnsjtiaudvutmgswqbewejlzibczzowgkdrjgxrpirfdaekvngcsonroheepdoeoeevaullbfwprcnhlxextbxpd\r\nifilrvacohnwcgzuleicucebrfxphosrgwnglxxkqrcorsxegjoppbb\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 15 ms, ", "memory": ": 3436 KB"}, {"test_no": "21\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "ggzmtrhkpdswwqgcbtviahqrgzhyhzddtdekchrpjgngupitzyyuipwstgzewktcqpwezidwvvxgjixnflpjhfznokmpbyzczrzk\r\ngpgwhtzrcytstezmhettkppgmvxlxqnkjzibiqdtceczkbfhdziuajwjqzgwnhnkdzizprgzwud\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "22\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "iypjqiiqxhtinlmywpetgqqsdopxhghthjopgbodkwrdxzaaxmtaqcfuiarhrvasusanklzcqaytdyzndakcpljqupowompjjved\r\nhxeatriypptbhnokarhgqdrkqkypqzdttixphngmpqjodzjqlmcztyjfgoswjelwwdaqdjayavsdocuhqsluxaaopniviaumxip\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "23\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "ypyhyabmljukejpltkgunwuanhxblhiouyltdiczttndrhdprqtlpfanmzlyzbqanfwfyurxhepuzspdvehxnblhajczqcxlqebx\r\nlladxuucky\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 0 ms, ", "memory": ": 3432 KB"}, {"test_no": "24\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "ddmgoarkuhknbtjggnomyxvvavobmylixwuxnnsdrrbibitoteaiydptnvtfblathihflefuggfnyayniragbtkommycpdyhft\r\ntejwybmyrhmalraptqwhghsckvnnaagtmzhnpwbhzzgfgritqwqqamgssllnicjqdkivrwaqyxngsqopwieljfxcdywjaal\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3420 KB"}, {"test_no": "25\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "kipjuscf\r\nkbwfqfwuvkyhmvnaznzsgdgdnpipikbicmlcwehjirmhgwpxwpgfztqjwfqfaapmsgskr\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "26\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "kobhhrqgwbgqkzcoacrhpkegyepzfds\r\nhlwcgbvvlegoyrcrjhsjywpdnccxtzgmeujxciuwjlnefllwldidlnjswmetkarxqjigokfvmpxpzfxarhkpdcia\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 0 ms, ", "memory": ": 3408 KB"}, {"test_no": "27\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "lllolloloolllloolollololololollllooololoooloooolololloolloollllolloolloooooooololllolllolllloolllool\r\nlollollololololooooloooooooooolloolllololooollllol\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3436 KB"}, {"test_no": "28\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "lloloooolooollololloooloololooollooloollolllloolllllllloollollllolooloollloololollllooloooololooolol\r\nlooooollooolllololloollooooololollollloloollollolo\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 0 ms, ", "memory": ": 3436 KB"}, {"test_no": "29\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "yyyyxxxxyxyyxxxyxxyxxxyyxxxxxyyxxxyxxyxxyyyxxxyxxxyxyxyyxyyxyxxyyyxyxxyxxyxxyyxyyyyxyyyyxxxyyxyxxyyx\r\nyyyyxxxxyxyyxxxyxxyxxxyyxxxxxyyxxxyxxyxxyyyxxxyxxxxxyxyyxyyxyxxyyyxyxxyxxyxxyyxyyyyxyyyyxxxyyxyxxyyx\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 0 ms, ", "memory": ": 3420 KB"}, {"test_no": "30\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\r\n", "output_data": "automaton\r\n", "correct_answer": "automaton\r\n", "comment": "ok single line: 'automaton'\r\n", "Time": ": 15 ms, ", "memory": ": 3424 KB"}, {"test_no": "31\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "abracadabra\r\nlol\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3392 KB"}, {"test_no": "32\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "abc\r\naa\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "33\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "ba\r\naa\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "34\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "abbb\r\naaab\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3432 KB"}, {"test_no": "35\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "baaa\r\nbb\r\n", "output_data": "need tree\r\n", "correct_answer": "need tree\r\n", "comment": "ok single line: 'need tree'\r\n", "Time": ": 15 ms, ", "memory": ": 3428 KB"}, {"test_no": "36\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "boosss\r\nosos\r\n", "output_data": "both\r\n", "correct_answer": "both\r\n", "comment": "ok single line: 'both'\r\n", "Time": ": 15 ms, ", "memory": ": 3436 KB"}], "username": "ltra_golu"}