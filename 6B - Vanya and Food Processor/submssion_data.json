{"submission_stats": [{"date_time": "", "submission_id": "43570269", "problem_name": "B - Vanya and Food Processor", "submission_link": "http://codeforces.com/contest/677/submission/43570269", "participant_id": "20050193", "contest_url": "http://codeforces.com/contest/677/problem/B", "submission_lang": "GNU C++14", "time_consumed": "46\u00a0ms", "memory_consumed": "800\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["677", "B"]}], "submissionid": "43570269", "problem_name": "B - Vanya and Food Processor", "language": "GNU C++14", "verdict": "Accepted", "time_taken": ["46 ms"], "memory": "788 KB", "submitted_time": "2018-09-29 15:41:10", "judged_time": "2018-09-29 15:41:10", "program": ["#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define                       pb push_back\r\n#define                       mp make_pair\r\n#define                           fs first\r\n#define                          sc second\r\n#define                           bg begin\r\n#define                       ll long long\r\n#define                     vi vector <ll>\r\n#define        vii vector <pair <ll, ll> >\r\n#define                 mii map < ll, ll >\r\n#define        vii vector <pair <ll, ll> >\r\n#define  hello ios::sync_with_stdio(false);\r\n\r\nint main()\r\n{\r\n    hello\r\n    ll n, h, k; cin >> n >> h >> k;\r\n    vi v(n);\r\n    for(int i = 0; i < n; i++)\r\n        cin >> v[i];\r\n    ll z = 0, sum = 0, c = 0;\r\n    while(z < n)\r\n    {\r\n        while (sum + v[z] <= h and z < n)\r\n        {\r\n            sum += v[z];\r\n            c += (sum / k);\r\n            sum %= k;\r\n            z++;\r\n        }\r\n        // cout << z << \" - \" << sum << endl;\r\n        if (sum != 0)\r\n            c++;\r\n        sum = 0;\r\n    }cout << c;\r\n}"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 6 3\r\n5 4 3 2 1\r\n", "output_data": "5", "correct_answer": "5\r\n", "comment": "ok 1 number(s): \"5\"\r\n", "Time": ": 15 ms, ", "memory": ": 4 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 6 3\r\n5 5 5 5 5\r\n", "output_data": "10", "correct_answer": "10\r\n", "comment": "ok 1 number(s): \"10\"\r\n", "Time": ": 15 ms, ", "memory": ": 8 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 6 3\r\n1 2 1 1 1\r\n", "output_data": "2", "correct_answer": "2\r\n", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 15 ms, ", "memory": ": 4 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 100 80\r\n76 75 73 71 76 74 73 70 78 75\r\n", "output_data": "10", "correct_answer": "10\r\n", "comment": "ok 1 number(s): \"10\"\r\n", "Time": ": 0 ms, ", "memory": ": 4 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 100 88\r\n11 23 69 6 71 15 25 1 43 37\r\n", "output_data": "5", "correct_answer": "5\r\n", "comment": "ok 1 number(s): \"5\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 100 81\r\n100 97 96 98 98 95 100 97 97 99\r\n", "output_data": "20", "correct_answer": "20\r\n", "comment": "ok 1 number(s): \"20\"\r\n", "Time": ": 31 ms, ", "memory": ": 0 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 1000000000 34\r\n262467899 490831561 793808758 450543931 364178715 95212706 14245051 92006075 424282318 436927280\r\n", "output_data": "100720715", "correct_answer": "100720715\r\n", "comment": "ok 1 number(s): \"100720715\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 1000000000 6\r\n510204596 367062507 635978332 260764751 339143281 377447788 893030825 977110226 643733983 575665576\r\n", "output_data": "930023645", "correct_answer": "930023645\r\n", "comment": "ok 1 number(s): \"930023645\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "45991 22981793 6964305\r\n4541982 13448131 3416359 19196918 7215562 22085249 5706651 2047840 9177711 21698698 21613586 19872735 16590894 21876159 13115806 12779463 4162610 13161049 9857696 20597507 22179691 18815080 13315976 21629583 796314 8747775 16032661 21576757 18446114 7092243 18222741 13207244 20077552 18929042 11006940 9870843 13977878 7707419 17834173 18918832 7719765 4752351 11923905 13516128 22506105 5631914 1207859 2586541 5395619 9036165 5145103 1370030 18922542 15523730 11439292 16360391 617377...", "output_data": "77865", "correct_answer": "77865\r\n", "comment": "ok 1 number(s): \"77865\"\r\n", "Time": ": 30 ms, ", "memory": ": 368 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "91206 48746556 43840770\r\n25260364 2151490 24624048 18689157 28291497 46520823 27310350 42182870 5742839 9804684 48442440 18137063 19301524 11955551 2086287 2929547 22296714 6542955 9975674 23648356 18992027 16806389 26890021 11074058 36735323 27269291 32395983 19133531 46822025 35123780 1256284 21830589 48282778 13507134 44410595 41705335 32512633 24056301 47817502 1550852 13968165 19419041 23397737 43883423 24269079 13259359 43629378 40168145 22451837 29926132 4712964 22820958 30625711 31887901 10017655 1...", "output_data": "62521", "correct_answer": "62521\r\n", "comment": "ok 1 number(s): \"62521\"\r\n", "Time": ": 31 ms, ", "memory": ": 712 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "7334 327328104 128544492\r\n216444437 200645620 209630369 49718177 269155573 321497430 262294712 183037605 183985718 216969478 66823077 296125870 67282513 300920585 296443474 65752849 155996075 248823951 23469516 136130258 84234738 22404454 168460821 146638927 195815092 150312231 319089629 253734461 305662936 95869279 272652061 138178730 147710226 208119368 55790034 289638905 160409220 221476741 249313480 71467201 80543864 299455993 64790508 12950366 108075559 93335569 157978745 294877655 157954741 319291581...", "output_data": "9942", "correct_answer": "9942\r\n", "comment": "ok 1 number(s): \"9942\"\r\n", "Time": ": 31 ms, ", "memory": ": 64 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "58054 195844245 62464786\r\n184638475 98142463 29576144 63601220 192801908 53153108 74856236 167539064 44441451 54361758 146498448 72961517 38813658 105152912 177016813 61852634 172905037 155953519 36962751 97006648 51977360 61507949 11943032 3243884 51272629 112845120 179386132 72770807 184995243 76281670 66268656 182235965 30235452 184117892 100887554 127978078 47204444 22060231 7186857 66033010 116533488 155038307 186775380 28220518 150978765 192650624 147243389 25222458 139730459 110312293 32950188 23403...", "output_data": "93752", "correct_answer": "93752\r\n", "comment": "ok 1 number(s): \"93752\"\r\n", "Time": ": 46 ms, ", "memory": ": 468 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "74182 769393089 47636658\r\n681250647 414401412 59800348 74473576 204487173 223326983 630062074 707576423 468268938 277951741 282505867 272136714 190766317 655792920 35719275 717196495 68280058 586055617 530372068 661478752 142269894 340410328 73480881 507818485 61618193 672710885 42188143 169355482 46396794 68676433 396770696 107299145 405670896 196715291 200093362 506259269 355150549 356038017 157531745 566524251 184491633 550842725 547516977 584074987 756936104 515280632 113613438 574038615 622273331 2883...", "output_data": "601903", "correct_answer": "601903\r\n", "comment": "ok 1 number(s): \"601903\"\r\n", "Time": ": 46 ms, ", "memory": ": 580 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 100000...", "output_data": "100000000000000", "correct_answer": "100000000000000\r\n", "comment": "ok 1 number(s): \"100000000000000\"\r\n", "Time": ": 46 ms, ", "memory": ": 788 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1 1 1\r\n1\r\n", "output_data": "1", "correct_answer": "1\r\n", "comment": "ok 1 number(s): \"1\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1 1000000000 1000000000\r\n1000000000\r\n", "output_data": "1", "correct_answer": "1\r\n", "comment": "ok 1 number(s): \"1\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "17\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1 1000000000 1\r\n1000000000\r\n", "output_data": "1000000000", "correct_answer": "1000000000\r\n", "comment": "ok 1 number(s): \"1000000000\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "18\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "8174 1000000000 11\r\n16 16 32 37 7 46 31 21 13 11 22 17 10 36 33 6 14 37 20 20 20 36 22 29 14 42 9 37 41 15 33 33 50 49 41 40 40 34 22 36 40 44 8 43 42 16 8 10 8 43 8 12 34 46 22 40 46 36 19 2 5 43 13 17 12 41 31 46 35 42 10 22 41 12 50 28 24 7 18 25 12 29 37 8 29 6 50 11 33 44 20 47 43 18 50 1 42 9 45 5 24 23 5 6 11 5 46 47 11 32 44 23 8 18 1 9 37 44 2 49 42 3 11 11 19 16 40 35 38 19 6 4 39 35 26 8 34 32 47 8 14 42 22 38 26 18 31 40 1 4 37 17 48 17 36 10 38 26 17 30 27 31 26 16 6 44 23 32 44 43 2 3 49 47 2...", "output_data": "18876", "correct_answer": "18876\r\n", "comment": "ok 1 number(s): \"18876\"\r\n", "Time": ": 0 ms, ", "memory": ": 72 KB"}, {"test_no": "19\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "22772 1000000000 30\r\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 ...", "output_data": "75906666667", "correct_answer": "75906666667\r\n", "comment": "ok 1 number(s): \"75906666667\"\r\n", "Time": ": 15 ms, ", "memory": ": 192 KB"}, {"test_no": "20\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "69110 1000000000 942062153\r\n358 523 3758 564 944 1033 558 196 1338 1611 4794 3600 3578 2991 1770 4400 3264 3382 2775 728 4240 3030 248 382 4451 1472 3488 3823 4173 1994 3733 1954 200 1709 4611 2163 4280 4112 4735 1202 4710 699 3141 474 806 2685 4571 538 3536 1207 571 4887 2994 4479 2973 4752 2252 4974 2338 417 667 2434 1426 1473 2062 2421 4263 923 4324 2420 3768 4673 4285 4024 1687 716 188 2248 2147 1653 2364 3142 1487 3744 3791 3285 4049 4796 1224 4186 2740 4796 547 4160 3854 760 4592 4330 115 621 3531 39...", "output_data": "1", "correct_answer": "1\r\n", "comment": "ok 1 number(s): \"1\"\r\n", "Time": ": 30 ms, ", "memory": ": 540 KB"}, {"test_no": "21\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1810 1000000000 959623951\r\n964129210 987095739 973951058 995570862 980147068 979938347 969109686 973991816 958588601 956058136 974364338 975364094 993186842 988747720 959452832 992604422 993754999 984697228 956535924 970991984 984425149 964855321 961848102 974047084 989701305 983407620 955849222 981325865 976937938 958192191 950220509 985030654 965665297 971360228 973833268 972039405 964765536 968299418 995697285 970225850 998185081 961497114 985193970 976424052 971388519 965135931 999906164 976539039 9859...", "output_data": "2773", "correct_answer": "2773\r\n", "comment": "ok 1 number(s): \"2773\"\r\n", "Time": ": 15 ms, ", "memory": ": 16 KB"}, {"test_no": "22\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1000 988 52\r\n440 552 451 168 357 607 367 64 270 982 294 885 711 476 361 240 405 965 216 763 527 740 522 595 545 615 333 472 12 857 856 556 128 291 235 768 544 563 906 809 590 579 678 160 224 32 551 27 473 809 917 822 313 595 363 622 288 148 850 342 768 385 643 701 719 854 697 361 798 838 380 379 112 185 29 264 568 692 539 118 186 812 772 885 190 660 970 34 982 966 570 163 679 781 668 174 443 106 749 478 414 827 928 161 984 231 850 468 857 141 974 29 910 4 953 724 813 684 859 946 409 952 384 637 175 630 52 ...", "output_data": "9665", "correct_answer": "9665\r\n", "comment": "ok 1 number(s): \"9665\"\r\n", "Time": ": 0 ms, ", "memory": ": 8 KB"}, {"test_no": "23\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1000 995 105\r\n866 581 61 229 781 320 102 172 330 818 188 14 626 260 48 980 586 451 48 941 445 148 550 972 717 584 641 541 644 364 75 360 803 173 604 530 236 412 162 207 52 445 553 489 770 141 538 573 84 712 109 167 338 244 331 330 424 490 679 842 475 978 982 440 774 910 489 907 735 845 666 606 612 668 956 42 75 749 130 952 376 59 93 445 96 173 623 282 356 927 27 243 805 96 370 330 597 908 593 545 747 979 346 580 750 707 268 592 89 634 249 111 622 82 856 915 742 761 336 336 704 925 211 94 323 332 65 562 653...", "output_data": "4924", "correct_answer": "4924\r\n", "comment": "ok 1 number(s): \"4924\"\r\n", "Time": ": 0 ms, ", "memory": ": 8 KB"}, {"test_no": "24\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 608632 231946\r\n436431 342522 82416 369867 450990 526348 311051 483679 244617 131790 373297 168645 13637 295023 50483 222595 143459 409305 193531 279976 557178 206762 288034 557883 255554 39870 509275 7481 405226 234547 360198 103963 218490 173627 597742 455133 605546 193486 84612 185649 196194 492165 485217 184218 265104 167456 122656 261593 162869 282785 589530 194532 494040 4423 522655 324386 211225 85468 510356 3936 361303 345527 371351 483863 203747 71683 593765 6067 3147 270806 561933 243005 42...", "output_data": "137864", "correct_answer": "137864\r\n", "comment": "ok 1 number(s): \"137864\"\r\n", "Time": ": 46 ms, ", "memory": ": 784 KB"}, {"test_no": "25\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 991258 269396\r\n554255 336356 783777 764972 271516 228738 456255 934955 685761 429605 555271 780482 283928 772572 547705 679069 141692 27589 937649 391601 941773 558033 792810 370960 666653 22124 897697 926733 192394 708590 258994 797920 441487 298183 15831 866865 613161 236097 409818 503816 547434 499258 758781 439173 200802 908028 462450 532013 145057 722473 136296 187182 274586 859730 103212 89477 685647 744552 403447 909285 327195 814559 385741 661634 605125 170576 769717 716762 663755 473595 272...", "output_data": "189189", "correct_answer": "189189\r\n", "comment": "ok 1 number(s): \"189189\"\r\n", "Time": ": 31 ms, ", "memory": ": 784 KB"}, {"test_no": "26\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 632597412 81300989\r\n4373768 35518285 547276272 300789587 169209177 177558293 631670053 378600911 122394115 542915371 234104516 13415560 14193497 409069423 543724820 312407523 60421479 150614242 416685516 608081560 466599563 98757483 341865788 127658167 55429361 197814419 418429343 123872844 581147407 528503144 251623447 270309678 119811157 446603678 538973432 617643544 530884438 32727553 419831169 466601035 50084157 359841328 60164865 239982009 42505389 99556269 442961952 443740950 469937798 4039860...", "output_data": "392243", "correct_answer": "392243\r\n", "comment": "ok 1 number(s): \"392243\"\r\n", "Time": ": 31 ms, ", "memory": ": 784 KB"}, {"test_no": "27\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 833688339 175081543\r\n813898038 246525104 190234700 94544728 722082769 82293819 386561934 829722013 502716847 805968540 783524683 29147865 66911420 374625972 561644961 708125961 71513587 372111656 610106490 458595299 145378930 64017187 374619055 293485484 771590788 396531163 363500591 521275022 271874764 104223064 116113743 187028293 199410046 192668980 456073389 436753822 363451485 495776345 47119437 54443093 149326079 218353876 190464556 100254048 70826727 108176230 731945912 802262133 649331640 28...", "output_data": "241597", "correct_answer": "241597\r\n", "comment": "ok 1 number(s): \"241597\"\r\n", "Time": ": 31 ms, ", "memory": ": 780 KB"}, {"test_no": "28\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 378273215 21\r\n303369428 353167955 144931102 138084475 108880271 361488884 132633664 333487309 110677220 98097767 121679890 224989147 292080661 108034165 242198457 19854721 161250102 215250685 116338165 132217418 59068669 185829162 345088103 222422281 275375528 136617539 309585023 151070993 39199418 308466138 48761 242848680 15282193 302525120 102194629 290965735 190077233 18408295 291013617 110494200 270076991 109873968 133345490 155605367 355885795 317018552 302844216 95738516 86609866 138037158 10...", "output_data": "901815762361", "correct_answer": "901815762361\r\n", "comment": "ok 1 number(s): \"901815762361\"\r\n", "Time": ": 46 ms, ", "memory": ": 780 KB"}, {"test_no": "29\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 457595434 25\r\n28317324 276023120 303353530 117301295 391053184 294732295 83049677 203400225 78936905 331112250 112318154 25560052 355949896 279417738 225953974 361678853 28665010 442662746 181904961 121851471 322788176 211454404 268073255 137545989 315211135 293498157 125782497 381809259 189746611 202466747 451552745 241250488 164154021 352253884 100598503 356488566 300479036 241682815 424129890 191347320 127257342 6092846 46025820 303599603 118484011 10138416 4758991 222818553 12195398 149367349 39...", "output_data": "915550778352", "correct_answer": "915550778352\r\n", "comment": "ok 1 number(s): \"915550778352\"\r\n", "Time": ": 46 ms, ", "memory": ": 788 KB"}, {"test_no": "30\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "6 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "6000000000", "correct_answer": "6000000000\r\n", "comment": "ok 1 number(s): \"6000000000\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "31\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "20 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "20000000000", "correct_answer": "20000000000\r\n", "comment": "ok 1 number(s): \"20000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "32\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 100000...", "output_data": "100000000000000", "correct_answer": "100000000000000\r\n", "comment": "ok 1 number(s): \"100000000000000\"\r\n", "Time": ": 46 ms, ", "memory": ": 784 KB"}, {"test_no": "33\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "5000000000", "correct_answer": "5000000000\r\n", "comment": "ok 1 number(s): \"5000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "34\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "12920 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000...", "output_data": "12920000000000", "correct_answer": "12920000000000\r\n", "comment": "ok 1 number(s): \"12920000000000\"\r\n", "Time": ": 0 ms, ", "memory": ": 108 KB"}, {"test_no": "35\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "10000000000", "correct_answer": "10000000000\r\n", "comment": "ok 1 number(s): \"10000000000\"\r\n", "Time": ": 30 ms, ", "memory": ": 4 KB"}, {"test_no": "36\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "4000000000", "correct_answer": "4000000000\r\n", "comment": "ok 1 number(s): \"4000000000\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "37\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000...", "output_data": "10000000000000", "correct_answer": "10000000000000\r\n", "comment": "ok 1 number(s): \"10000000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 88 KB"}, {"test_no": "38\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100 1000000000 1\r\noutput_data": "100000000000", "correct_answer": "100000000000\r\n", "comment": "ok 1 number(s): \"100000000000\"\r\n", "Time": ": 31 ms, ", "memory": ": 0 KB"}, {"test_no": "39\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "20000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000...", "output_data": "20000000000000", "correct_answer": "20000000000000\r\n", "comment": "ok 1 number(s): \"20000000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 172 KB"}, {"test_no": "40\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 1000000000 1\r\n999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999\r\n", "output_data": "9999999990", "correct_answer": "9999999990\r\n", "comment": "ok 1 number(s): \"9999999990\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "41\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3 1000000000 1\r\n1000000000 1000000000 1000000000\r\n", "output_data": "3000000000", "correct_answer": "3000000000\r\n", "comment": "ok 1 number(s): \"3000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "42\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "25 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\r\n", "output_data": "25000000000", "correct_answer": "25000000000\r\n", "comment": "ok 1 number(s): \"25000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "43\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 10000000...", "output_data": "1000000000000", "correct_answer": "1000000000000\r\n", "comment": "ok 1 number(s): \"1000000000000\"\r\n", "Time": ": 30 ms, ", "memory": ": 12 KB"}, {"test_no": "44\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10000 100000000 1\r\n100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 100000000 10...", "output_data": "1000000000000", "correct_answer": "1000000000000\r\n", "comment": "ok 1 number(s): \"1000000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 88 KB"}, {"test_no": "45\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "1400 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 10000000...", "output_data": "1400000000000", "correct_answer": "1400000000000\r\n", "comment": "ok 1 number(s): \"1400000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 12 KB"}, {"test_no": "46\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10 900000000 1\r\n900000000 900000000 900000000 900000000 900000000 900000000 900000000 900000000 900000000 900000000\r\n", "output_data": "9000000000", "correct_answer": "9000000000\r\n", "comment": "ok 1 number(s): \"9000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 4 KB"}, {"test_no": "47\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "50 1000000000 1\r\noutput_data": "50000000000", "correct_answer": "50000000000\r\n", "comment": "ok 1 number(s): \"50000000000\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "48\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "23000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000...", "output_data": "23000000000000", "correct_answer": "23000000000000\r\n", "comment": "ok 1 number(s): \"23000000000000\"\r\n", "Time": ": 30 ms, ", "memory": ": 184 KB"}, {"test_no": "49\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5000 1000000000 1\r\n1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 10000000...", "output_data": "5000000000000", "correct_answer": "5000000000000\r\n", "comment": "ok 1 number(s): \"5000000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 48 KB"}, {"test_no": "50\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "10000 999999999 1\r\n999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 999999999 99...", "output_data": "9999999990000", "correct_answer": "9999999990000\r\n", "comment": "ok 1 number(s): \"9999999990000\"\r\n", "Time": ": 31 ms, ", "memory": ": 92 KB"}, {"test_no": "51\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2 1000000000 1\r\n1000000000 1000000000\r\n", "output_data": "2000000000", "correct_answer": "2000000000\r\n", "comment": "ok 1 number(s): \"2000000000\"\r\n", "Time": ": 15 ms, ", "memory": ": 0 KB"}, {"test_no": "52\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3 1000000000 1\r\n1000000000 1000000000 1\r\n", "output_data": "2000000001", "correct_answer": "2000000001\r\n", "comment": "ok 1 number(s): \"2000000001\"\r\n", "Time": ": 15 ms, ", "memory": ": 4 KB"}, {"test_no": "53\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3 1000000000 1\r\n999999999 999999999 999999999\r\n", "output_data": "2999999997", "correct_answer": "2999999997\r\n", "comment": "ok 1 number(s): \"2999999997\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}], "username": "ltra_golu"}