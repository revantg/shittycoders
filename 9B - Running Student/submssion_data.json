{"submission_stats": [{"date_time": "", "submission_id": "40246854", "problem_name": "B - Running Student", "submission_link": "http://codeforces.com/contest/9/submission/40246854", "participant_id": "18582648", "contest_url": "http://codeforces.com/contest/9/problem/B", "submission_lang": "GNU C++14", "time_consumed": "62\u00a0ms", "memory_consumed": "0\u00a0KB", "submission_verdict": "OK", "submission_verdict_text": "Accepted", "problem_id": ["9", "B"]}], "submissionid": "40246854", "problem_name": "B - Running Student", "language": "GNU C++14", "verdict": "Accepted", "time_taken": ["62 ms"], "memory": "8 KB", "submitted_time": "2018-07-13 05:01:09", "judged_time": "2018-07-13 05:01:09", "program": ["#include <bits/stdc++.h>\r\nusing namespace std;\r\nlong double dist(long long x1, long long y1, long long x2, long long y2)\r\n{\r\n    long long x = (x2 - x1) * (x2 - x1);\r\n    long double y = (y2 - y1) * (y2 - y1);\r\n    // cout << x << \" , \" << y;\r\n    long double ans = pow(x + y, 0.5);\r\n    // cout << endl << ans;\r\n    return ans;\r\n    // cout << y2 << endl;\r\n    // return pow(pow((float)x2 - (float)x1, 2) + pow((float)y2 - (float)y1, 2), 0.5);\r\n    // return pow(x+y, 0.5);\r\n}\r\nint main()\r\n{\r\n    // cout << dist(-1, 0, 97616, -1);\r\n    int n, vb, vs; cin >> n >> vb >> vs;\r\n    vector <int> v(n+1);\r\n    for(int i = 1; i <= n; i++) cin >> v[i];\r\n    int ux, uy; cin >> ux >> uy;\r\n    float mn = 9999999, pos = -1;\r\n    for(int i = 2; i <= n; i++)\r\n    {\r\n        float ts, td;\r\n        ts = ((long double)v[i] / vb) + (dist(v[i], 0, ux, uy) / vs);\r\n        // cout << i << \" - \" << dist(v[i], 0, ux, uy) << \" , \"<<ts <<endl; \r\n        if (ts <= mn) mn = ts, pos = i;\r\n    }\r\n    cout << pos + (pos == 1);\r\n}"], "testcases_data": [{"test_no": "1\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4 5 2\r\n0 2 4 6\r\n4 1\r\n", "output_data": "3", "correct_answer": "3", "comment": "ok 1 number(s): \"3\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "2\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2 1 1\r\n0 100000\r\n100000 100000\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 8 KB"}, {"test_no": "3\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "6 5 1\r\n0 1 2 3 4 5\r\n0 0\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "4\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4 100 10\r\n0 118 121 178\r\n220 220\r\n", "output_data": "4", "correct_answer": "4", "comment": "ok 1 number(s): \"4\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "5\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "4 3 3\r\n0 6 8 10\r\n7 -4\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "6\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 900 1\r\n0 37474 80030 85359 97616\r\n-1 -1\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "7\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "5 200 400\r\n0 8068 28563 51720 66113\r\n5423 -34\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "8\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "6 10 3\r\n0 12 14 16 19 20\r\n14 0\r\n", "output_data": "3", "correct_answer": "3", "comment": "ok 1 number(s): \"3\"\r\n", "Time": ": 62 ms, ", "memory": ": 4 KB"}, {"test_no": "9\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "6 13 11\r\n0 16 27 31 39 42\r\n54 3\r\n", "output_data": "6", "correct_answer": "6", "comment": "ok 1 number(s): \"6\"\r\n", "Time": ": 0 ms, ", "memory": ": 4 KB"}, {"test_no": "10\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "11 853 721\r\n0 134 1971 2369 3381 3997 4452 6875 8983 9360 9399\r\n7345 333\r\n", "output_data": "8", "correct_answer": "8", "comment": "ok 1 number(s): \"8\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "11\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "35 35 12\r\n0 90486 90543 90763 91127 91310 92047 92405 93654 93814 94633 94752 94969 94994 95287 96349 96362 96723 96855 96883 97470 97482 97683 97844 97926 98437 98724 98899 98921 99230 99253 99328 99444 99691 99947\r\n96233 -7777\r\n", "output_data": "9", "correct_answer": "9", "comment": "ok 1 number(s): \"9\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "12\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "55 11 44\r\n0 3343 3387 3470 3825 3832 3971 4026 4043 4389 4492 4886 5015 5084 5161 5436 5595 5616 5677 5987 6251 6312 6369 6469 6487 6493 6507 6641 6928 7067 7159 7280 7303 7385 7387 7465 7536 7572 7664 7895 7921 7955 8110 8191 8243 8280 8523 8525 8581 8877 9221 9462 9505 9594 9596\r\n8000 0\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "13\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "72 1000 777\r\n0 215 2814 5104 5226 5925 6734 9213 11697 13739 14015 16101 17234 19013 19566 19683 20283 20837 21332 21432 25490 26284 27728 29911 30112 30133 31494 31595 32499 32932 33289 36611 37736 43548 44440 44537 47656 47699 48327 50942 52178 53759 56925 57671 62024 65441 67958 70346 71606 75235 75466 75553 75905 76173 76512 77784 78183 80425 81339 81543 84537 88384 89953 90214 92107 92274 93328 93550 93987 97546 99459 99532\r\n63421 35\r\n", "output_data": "45", "correct_answer": "45", "comment": "ok 1 number(s): \"45\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "14\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "76 1 1\r\n0 1000 1754 2749 3687 4983 8121 10299 11043 12986 14125 15910 17070 17189 17551 17953 17973 20816 25436 26150 27446 27788 28466 28941 29537 33965 37566 40845 40930 41304 41614 41615 43042 45098 45844 49878 50453 50936 55480 58410 59258 59287 62789 64127 64333 64450 64862 65404 66451 67626 69294 69804 71988 72165 74196 74560 75407 76611 77055 77344 79470 83566 84550 87458 87627 88205 89880 90255 90586 91970 93795 95308 99032 99442 99547 99549\r\n0 0\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "15\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "85 1 1\r\n0 99015 99017 99022 99024 99025 99027 99048 99057 99079 99084 99091 99093 99103 99106 99108 99111 99122 99123 99130 99165 99174 99178 99187 99193 99200 99206 99271 99292 99347 99358 99360 99362 99385 99398 99403 99404 99410 99413 99431 99445 99446 99447 99464 99468 99496 99502 99504 99512 99562 99565 99593 99594 99595 99605 99607 99662 99663 99675 99700 99703 99705 99716 99717 99720 99725 99749 99753 99802 99807 99817 99829 99879 99898 99899 99900 99901 99907 99908 99916 99920 99930 99935 99952 999...", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "16\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "94 2 1\r\n0 5000 5001 5002 5003 5004 5005 5006 5007 5008 5009 5010 5011 5012 5013 5014 5015 5016 5017 5018 5019 5020 5021 5022 5023 5024 5025 5026 5027 5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093\r\n5050 -100000\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "17\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100 954 953\r\n0 294 799 1114 1480 1784 3658 3687 4469 5664 6065 6381 6696 7370 8943 9777 9802 10012 10016 10194 11401 11419 12601 14115 14953 17831 20544 20838 21129 28849 30400 30933 31146 34852 36040 37604 38798 40376 41190 42769 43276 45439 45529 46351 48635 51067 51330 51637 53205 55840 57618 59696 59878 61219 61388 62550 62609 62665 63962 64414 65600 66303 66548 66624 66634 66894 70706 71260 73819 78199 79591 79798 80298 83326 83548 84133 84166 85106 85549 87578 87588 89135 90766 90886 91219 92919 9312...", "output_data": "73", "correct_answer": "73", "comment": "ok 1 number(s): \"73\"\r\n", "Time": ": 30 ms, ", "memory": ": 4 KB"}, {"test_no": "18\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100 1 2\r\n0 1 2 3 4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\r\n100 0\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 0 ms, ", "memory": ": 0 KB"}, {"test_no": "19\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100 1000 1\r\n0 505 506 514 515 520 523 527 529 530 538 547 550 554 559 562 566 568 569 580 582 584 588 597 609 621 624 629 630 631 634 641 646 653 657 666 673 678 680 683 685 690 695 698 699 700 705 709 716 731 734 735 736 738 756 761 762 765 769 772 776 779 784 790 794 812 814 816 833 837 842 845 850 854 855 863 868 872 882 892 893 898 899 900 901 902 915 916 917 932 936 954 962 968 975 978 983 992 996 998\r\n600 7778\r\n", "output_data": "23", "correct_answer": "23", "comment": "ok 1 number(s): \"23\"\r\n", "Time": ": 30 ms, ", "memory": ": 4 KB"}, {"test_no": "20\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2 1 1\r\n0 100000\r\n-100000 -100000\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "21\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "2 1000 1000\r\n0 1\r\n1 0\r\n", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 0 KB"}, {"test_no": "22\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "100 10 10\r\n0 1503 2483 2544 3474 3692 4063 4502 5230 5795 6226 6439 6648 6714 9763 12886 13628 16407 16598 17246 17603 18523 19702 20927 22163 22165 24192 26091 26341 26724 26864 27275 28247 28782 30393 33807 33876 35423 35954 36112 37491 44171 44554 44753 45589 46112 47136 47456 51242 51883 53495 53945 55108 55277 55338 56083 56426 58077 58126 58318 60161 61323 62959 63700 65294 65800 67598 68072 69420 69666 71809 72304 73324 73957 76754 78309 78882 78938 79005 79138 80285 80692 81857 83357 83639 83777 84...", "output_data": "2", "correct_answer": "2", "comment": "ok 1 number(s): \"2\"\r\n", "Time": ": 30 ms, ", "memory": ": 4 KB"}, {"test_no": "23\r\n            ", "testcase_verdict": "Verdict: OK", "input_data": "3 1 1\r\n0 1 2\r\n2 0\r\n", "output_data": "3", "correct_answer": "3", "comment": "ok 1 number(s): \"3\"\r\n", "Time": ": 30 ms, ", "memory": ": 4 KB"}], "username": "ltra_golu"}